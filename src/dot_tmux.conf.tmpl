# == Options == #

# Appearance
# See <https://medium.com/@jogarcia/bring-on-the-true-color-on-alacritty-tmux-neovim-99134521731d>
set -g  default-terminal "$TERM"
set -ga terminal-overrides ",$TERM:Tc"

set -g @base16-palette "~/.tmux/base16-palette.conf"
set -g @base16-border rounded
set -g @base16-statusline on
set -g @base16-transparent on

# Sensible options, stolen from: https://github.com/tmux-plugins/tmux-sensible
set -g escape-time 0
set -g history-limit 10000
set -g display-time 3000
set -g status-interval 5
set -g focus-events on

# Keymap options
set -g mode-keys vi
set -g mouse on
set -g status-keys emacs
set -g extended-keys on
set -g extended-keys-format csi-u

# Misc options
set -g allow-passthrough off
set -g set-clipboard external
set -g renumber-windows on

set -g base-index 1
set -g pane-base-index 1
set -g aggressive-resize on

set -g @popup-autostart on
set -g @popup-id-format "#{session_name}/#{b:pane_current_path}/{popup_name}"
set -g @continuum-save-interval 15

# == Keymaps == #

# Modes
set -g prefix C-\\
bind C-\\ send-prefix
bind -n M-u copy-mode

# Copy select
bind -T copy-mode-vi v send -X begin-selection
bind -T copy-mode-vi a send -X cancel
bind -T copy-mode-vi i send -X cancel
bind -T copy-mode-vi Escape send -X cancel
bind -T copy-mode-vi C-c send -X clear-selection
bind -T copy-mode-vi C-v send -X begin-selection \; send-keys -X rectangle-toggle

bind -T copy-mode-vi M-h select-pane -L
bind -T copy-mode-vi M-j select-pane -D
bind -T copy-mode-vi M-k select-pane -U
bind -T copy-mode-vi M-l select-pane -R

bind -T copy-mode-vi y send -X copy-selection-and-cancel
bind -T copy-mode-vi Y send -X copy-line-and-cancel

# Sessions
bind -n M-N new-session
bind -n M-q choose-tree -Zs -O time

# Panes
bind -n M-- split-window -v -c "#{pane_current_path}"
bind -n M-_ split-window -fv -c "#{pane_current_path}"
bind -n M-\\ split-window -h -c "#{pane_current_path}"
bind -n M-| split-window -fh -c "#{pane_current_path}"
bind -n M-m resize-pane -Z
bind -n M-w confirm-before -p "Close current pane? (y/n)" kill-pane

bind -n M-h if -F "#{@pane-is-vim}" 'send-keys M-h' 'select-pane -L'
bind -n M-j if -F "#{@pane-is-vim}" 'send-keys M-j' 'select-pane -D'
bind -n M-k if -F "#{@pane-is-vim}" 'send-keys M-k' 'select-pane -U'
bind -n M-l if -F "#{@pane-is-vim}" 'send-keys M-l' 'select-pane -R'

bind -n M-H if -F "#{@pane-is-vim}" 'send-keys M-H' 'resize-pane -L 3'
bind -n M-J if -F "#{@pane-is-vim}" 'send-keys M-J' 'resize-pane -D 3'
bind -n M-K if -F "#{@pane-is-vim}" 'send-keys M-K' 'resize-pane -U 3'
bind -n M-L if -F "#{@pane-is-vim}" 'send-keys M-L' 'resize-pane -R 3'

bind -n M-Left swap-pane -s "{left-of}"
bind -n M-Down swap-pane -s "{down-of}"
bind -n M-Up swap-pane -s "{up-of}"
bind -n M-Right swap-pane -s "{right-of}"

bind M-h select-pane -L
bind M-j select-pane -D
bind M-k select-pane -U
bind M-l select-pane -R

bind -r M-H resize-pane -L 3
bind -r M-J resize-pane -D 3
bind -r M-K resize-pane -U 3
bind -r M-L resize-pane -R 3

# Tabs
bind -n M-n new-window -c "#{pane_current_path}"
bind -n M-W confirm-before -p "Close current tab? (y/n)" kill-window

bind -n M-, select-window -t "{previous}"
bind -n M-. select-window -t "{next}"

bind -n M-< swap-window -t "{previous}" \; select-window -t "{previous}"
bind -n M-> swap-window -t "{next}" \; select-window -t "{next}"

bind -n M-1 select-window -t :=1
bind -n M-2 select-window -t :=2
bind -n M-3 select-window -t :=3
bind -n M-4 select-window -t :=4
bind -n M-5 select-window -t :=5
bind -n M-6 select-window -t :=6
bind -n M-7 select-window -t :=7
bind -n M-8 select-window -t :=8
bind -n M-9 select-window -t :=9

# Popups
bind -n M-g run "#{@popup-toggle} -Ed'#{pane_current_path}' -w50% -h90% -xR --name=lazygit lazygit"
bind -n M-t run "#{@popup-toggle} -Ed'#{pane_current_path}' -w50% -h90% -xR --name=scratchpad"
bind -n M-e run "#{@popup-toggle} -Ed'#{pane_current_path}' -w50% -h90% -xR --name=yazi yazi"
#{{ if eq .platform "termux" }}
bind -n M-G run "#{@popup-toggle} -Ed$HOME -w50% -h90% -xR --id=gpg-agent ~/.scripts/gpg-agent-here"
#{{ end }}

# Misc
bind R source-file ~/.tmux.conf

# == Plugins == #

set -g @plugin "tmux-plugins/tpm"
# Must be loaded before continuum, as it overrides the status options
source-file ~/.tmux/tmux-base16.conf
#{{ if ne .platform "termux" }}
set -g @plugin "tmux-plugins/tmux-resurrect"
set -g @plugin "tmux-plugins/tmux-continuum"
#{{ end }}
# Must be loaded after continuum, as it starts the popup server, which disables autosave
set -g @plugin "loichyan/tmux-toggle-popup"

if '[ ! -d ~/.tmux/plugins/tpm ]' {
	display "Installing TPM"
	run "git clone https://github.com/tmux-plugins/tpm ~/.tmux/plugins/tpm"
}
run ~/.tmux/plugins/tpm/tpm

# Restore previous session
if '[ -z "$TMUX_POPUP_SERVER" ] && [ -z "$(tmux show -gqv @tmux-did-init)" ]' {
	run "#{@resurrect-restore-script-path}"
	set -g @tmux-did-init 1
}

# vim:ft=tmux
