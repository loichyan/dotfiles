# git-cliff ~ configuration file
# https://git-cliff.org/docs/configuration

[remote.github]
owner = "{OWNER}"
repo = "{REPO}"

[git]
# parse the commits based on https://www.conventionalcommits.org
conventional_commits = true
# filter out the commits that are not conventional
filter_unconventional = true
# process each line of a commit as an individual commit
split_commits = false
# protect breaking changes from being skipped due to matching a skipping commit_parser
protect_breaking_commits = false
# regex for parsing and grouping commits
commit_parsers = [
    { message = '^feat', group = "<!-- 0 -->‚õ∞Ô∏è Features" },
    { message = '^fix', group = "<!-- 1 -->üêõ Bug Fixes" },
    { message = '^perf', group = "<!-- 2 -->‚ö° Performance" },
    { message = '^doc', group = "<!-- 3 -->üìö Documentation" },
    { message = '^refactor\(clippy\)', skip = true },
    { message = '^refactor', group = "<!-- 4 -->üöú Refactor" },
    { message = '^style', group = "<!-- 5 -->üé® Styling" },
    { message = '^test', group = "<!-- 6 -->üß™ Testing" },
    { message = '^build\(deps\)', skip = true },
    { message = '^chore\(release\)', skip = true },
    { message = "^build|^chore|^ci", group = "<!-- 7 -->‚öôÔ∏è Miscellaneous Tasks" },
    { message = "^revert", group = "<!-- 8 -->‚óÄÔ∏è Revert" },
]
# filter out the commits that are not matched by commit parsers
filter_commits = true
# sort the commits inside sections by oldest/newest order
sort_commits = "newest"
# remove issue numbers from commits
commit_preprocessors = [{ pattern = '\((\w+\s)?#([0-9]+)\)', replace = "" }]
# sort the tags topologically
topo_order = false
# regex for matching git tags
tag_pattern = "v[0-9].*"
# regex for skipping tags
skip_tags = "alpha|beta"
# regex for ignoring tags
ignore_tags = "rc"

[changelog]
header = """
# Changelog\n
All notable changes to this project will be documented in this file. \
See [conventional commits](https://www.conventionalcommits.org/) for commit guidelines.\n
"""
# tera syntax: https://keats.github.io/tera/docs/#introduction
body = """
{%- set REPO = "https://github.com/" ~ remote.github.owner ~ "/" ~ remote.github.repo -%}
{%- set NEW_CONTRIBUTORS = github.contributors | filter(attribute="is_first_time", value=true) -%}
{%- set SUMMARY = get_env(name="GIT_CLIFF_SUMMARY", default="") | trim -%}

{% if version -%}
    {% if previous.version -%}
        ## [{{ version }}]({{ REPO }}/compare/{{ previous.version }}..{{ version }}) - {{ timestamp | date(format="%Y-%m-%d") }}
    {% else -%}
        ## [{{ version }}] - {{ timestamp | date(format="%Y-%m-%d") }}
    {% endif -%}
{% else -%}
    ## [Unreleased]
{% endif -%}

{% if SUMMARY %}
    {{ SUMMARY }}
{% elif false %}
    ### ‚ö†Ô∏è Breaking Changes\n
    - Breaking changes go here.

    ### ‚ú® Highlights\n
    - Human-written change summaries go here.
{% endif -%}

{% for group, commits in commits | group_by(attribute="group") %}
    ### {{ group | striptags | trim | upper_first }}
    {% for commit in commits %}
        - {% if commit.scope -%} (**{{commit.scope}}**) {% endif -%}
          {% if commit.breaking -%} [**breaking**] {% endif -%}
          {{ commit.message | upper_first | trim }}
          {%- if commit.remote.username %} - @{{ commit.remote.username }} {%- endif %}
          {%- if commit.remote.pr_number %} \
              - [#{{ commit.remote.pr_number }}]({{ REPO }}/pull/{{ commit.remote.pr_number }})
          {%- else %} \
              - [{{ commit.id | truncate(length=7, end="") }}]({{ REPO }}/commit/{{ commit.id }})
          {%- endif %}
    {%- endfor %}
{% endfor -%}

{% if NEW_CONTRIBUTORS | length != 0 %}
    ### ‚ù§Ô∏è New Contributors
    {% for contributor in NEW_CONTRIBUTORS %}
        - @{{ contributor.username }} made their first contribution
          {%- if contributor.pr_number %} \
              in [#{{ contributor.pr_number }}]({{ REPO }}/pull/{{ contributor.pr_number }})
          {%- endif %}
    {%- endfor %}
{% endif %}\n
"""
footer = """
<!-- generated by git-cliff -->
"""
# remove the leading and trailing whitespaces of each line
trim = true
